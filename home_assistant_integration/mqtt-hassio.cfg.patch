diff --git a/contrib/etc/ebusd/mqtt-hassio.cfg b/contrib/etc/ebusd/mqtt-hassio.cfg
index 824e9df9..2be300ba 100644
--- a/contrib/etc/ebusd/mqtt-hassio.cfg
+++ b/contrib/etc/ebusd/mqtt-hassio.cfg
@@ -100,14 +100,15 @@ filter-seen = 5
 # include only messages having a priority less than or equal to the specified value.
 #filter-priority =
 # include only messages having the specified circuit (partial match, alternatives and wildcard supported).
-#filter-circuit =
+filter-circuit = boiler|dhw
 # exclude messages having the specified circuit (partial match, alternatives and wildcard supported).
 #filter-non-circuit =
 # include only messages having the specified name (partial match, alternatives and wildcard supported).
 # HA integration: filter to some useful names for monitoring the heating circuit
-filter-name = status|temp|yield|count|energy|power|runtime|hours|starts|mode|curve|^load$|^party$|sensor
+#filter-name = status|temp|yield|count|energy|power|runtime|hours|starts|mode|curve|^load$|^party$|sensor
+filter-name = status|temp|count|mode|curve|z1|dhw|heat|time
 # exclude messages having the specified name (partial match, alternatives and wildcard supported).
-#filter-non-name =
+filter-non-name = ^heat_request_|^hot_water_target_temp_|^thermoregulation_|^heat_temp_ranges_|^dump_zones_|^timer_prog_|^boiler_life_time$
 # include only messages having the specified level (partial match, alternatives and wildcard supported).
 # Note: This is a filter on top of the messages already filtered implicitly for the ebusd "mqtt" user (if any).
 # Note: Since the empty string matches all levels, an explicit check for empty string (with "^$") needs to be used for
@@ -115,9 +116,9 @@ filter-name = status|temp|yield|count|energy|power|runtime|hours|starts|mode|cur
 filter-level = ^$
 # include only messages having the specified direction ("r", "w", "u", or "uw". partial match, alternatives and wildcard supported).
 # HA integration: writable messages excluded for now
-filter-direction = r|u
+#filter-direction = r|u
 # HA integration: for including writable messages, use this line or overwrite with '--mqttvar=filter-direction=r|u|^w'.
-#filter-direction = r|u|^w
+filter-direction = r|u|^w
 # include only fields having the specified name (partial match, alternatives and wildcard supported).
 #filter-field =
 # exclude fields having the specified name (partial match, alternatives and wildcard supported).
@@ -177,7 +178,9 @@ type_switch-w-number =
     number,pressure, = bar$
     number,gas, = gas*/min$
     number,humidity, = humid*%%$
+    number,, = s|min$
     number,, = curve,
+    number,, = slope

 # HA integration: the mapping list for numeric sensor entities by field type, name, message, and unit.
 type_switch-number =
@@ -190,6 +193,9 @@ type_switch-number =
     sensor,yield,total_increasing = total*,Wh$
     sensor,,total_increasing = hours|,h$
     sensor,,total_increasing = starts*,$
+    sensor,,total_increasing = count*,$
+    sensor,time,total_increasing = life_time|,min$
+    sensor,time,measurement = boost_time|,s$
     sensor,pressure,measurement = bar$
     sensor,gas,measurement = gas*/min$
     sensor,humidity,measurement = humid*%%$
@@ -199,11 +205,15 @@ type_switch-number =
 type_switch-w-list =
     switch,, = onoff
     switch,,,yesno = yesno
+    switch,,,comfort_modes = comfort_modes
+    switch,,,thermoreg_types = thermoreg_types

 # HA integration: the mapping list for rather binary sensor entities by field type, name, message, and unit.
 type_switch-list =
     binary_sensor,,measurement = onoff
     binary_sensor,,measurement,yesno = yesno
+    binary_sensor,,measurement,comfort_modes = comfort_modes
+    binary_sensor,,measurement,thermoreg_types = thermoreg_types
     sensor,, =

 # HA integration: currently unused mapping lists for non-numeric/non-binary entities.
@@ -268,6 +278,20 @@ type_part-switchyesno = ,
   "payload_on":"yes",
   "payload_off":"no"%state_class

+type_part-switchcomfort_modes = ,
+  "command_topic":"%topic/set",
+  "payload_always_on":"always_on",
+  "payload_delayed_on":"delayed_on",
+  "payload_off":"off"%state_class
+
+type_part-switchthermoreg_types = ,
+  "command_topic":"%topic/set",
+  "payload_fixed_temp":"fixed_temp",
+  "payload_basic_on_off":"basic_on_off",
+  "payload_room_temp_only":"room_temp_only",
+  "payload_outdoor_temp_only":"outdoor_temp_only",
+  "payload_outdoor_and_room":"outdoor_and_room"%state_class
+
 # HA integration: %type_part variable for binary_sensor %type_topic
 type_part-binary_sensor = ,
   "payload_on":"on",
@@ -277,6 +301,22 @@ type_part-binary_sensoryesno = ,
   "payload_on":"yes",
   "payload_off":"no"%state_class

+type_part-binary_sensorcomfort_modes = ,
+  "command_topic":"%topic/set",
+  "payload_always_on":"always_on",
+  "payload_delayed_on":"delayed_on",
+  "payload_off":"off"%state_class
+
+type_part-binary_sensorthermoreg_types = ,
+  "command_topic":"%topic/set",
+  "payload_fixed_temp":"fixed_temp",
+  "payload_basic_on_off":"basic_on_off",
+  "payload_room_temp_only":"room_temp_only",
+  "payload_outdoor_temp_only":"outdoor_temp_only",
+  "payload_outdoor_and_room":"outdoor_and_room"%state_class
+
+
+
 # the field specific part (evaluated after the message specific part).
 # HA integration: set to the mapped %type_part from above
 field_payload = %type_part
@@ -289,7 +329,8 @@ definition-topic ?= %haprefix/%type_topic/%{TOPIC}_%FIELD/config
 # HA integration: this is the config topic payload for HA's MQTT discovery.
 definition-payload = {
   "unique_id":"%{TOPIC}_%FIELD",
-  "name":"%prefixn %circuit %name %fieldname",
+  "name":"%messagecomment %comment",
+  "friendly_name":"%messagecomment %comment",
   "device":%circuit_part,
   "value_template":"{{value_json[\"%field\"].value}}",
   "state_topic":"%topic"%field_payload
@@ -318,7 +359,7 @@ global_prefix = {
   "unique_id":"%TOPIC",
   "device":%global_device,
   "state_topic":"%topic",
-  "name":"%prefixn %name"
+  "name":"%name"

 # HA integration: boolean suffix for global parts
 global_boolean_suffix = ,
@@ -367,7 +408,7 @@ def_global_updatecheck_device-payload =  {
     "suggested_area":"%area"
   },
   "state_topic":"%topic",
-  "name":"%prefixn %name",
+  "name":"%name",
   "value_template":"{%% set my_new = value_json|truncate(255)|regex_replace(find='^[^,]*|, device firmware |,.*| available',replace='') %%}{%% set my_cur = 'old' %%}{%% if my_new == '' %%}{%% set my_new = 'current' %%}{%% set my_cur = 'current' %%}{%% endif %%}{{ {'installed_version':my_cur,'latest_version':my_new,'entity_picture':'https://adapter.ebusd.eu/favicon.ico','release_url':'https://adapter.ebusd.eu/firmware/ChangeLog'} | tojson }}"
  }

